---
import Base from "@/layouts/Base.astro";
import ContentLead from "@/layouts/components/ContentLead.astro";
import ContentSection from "@/layouts/components/ContentSection.astro";
import weeklyRhythmData from "@/data/weeklyRhythm.json";
import philosophyQuotes from "@/data/philosophy-quotes.json";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import type { ImageMetadata } from "astro";

// Import images
import tuesdayTalksImage from "@/assets/images/tuesday-talks.png";
import wednesdayWorkshopsImage from "@/assets/images/wednesday-workshops.png";
import showTalkBuildLoopImage from "@/assets/images/show-talk-build-loop.jpeg";
import walkingImage from "@/assets/images/walking.jpeg";
import demoDayImage from "@/assets/images/demo-day.jpeg";
import weeklyLoopScheduleImage from "@/assets/images/weekly-loop-schedule.png";

// Get loop content
const loop = (await getEntry(
  "loop",
  "-index"
)) as CollectionEntry<"loop">;

const { title, meta_title, description, intro, sections } = loop.data;

// Helper function to find quote by ID
const getQuoteById = (id: string) => {
  return philosophyQuotes.find(q => q.id === id);
};

// Get a relevant quote for the ContentLead
const leadQuote = getQuoteById("berdyaev-beginning-end");

// Map image filenames to imported slide objects
const slideMap: Record<string, ImageMetadata | string> = {
  "tuesday-talks.png": tuesdayTalksImage,
  "wednesday-workshops.png": wednesdayWorkshopsImage,
  "show-talk-build-loop.jpeg": showTalkBuildLoopImage,
  "walking.jpeg": walkingImage,
  "demo-day.jpeg": demoDayImage,
  "weekly-loop-schedule.png": weeklyLoopScheduleImage,
};

interface Section {
  id: string;
  title: string;
  content: string;
  image?: string;
  float?: string;
  bulletpoints?: string[];
  link?: string;
}

// Process sections to add weekly rhythm data where appropriate
const processedSections = sections.map(
  (section: Section) => {
  if (section.id === "weekly-overview") {
    // Convert weekly rhythm schedule to bulletpoints
    const scheduleBullets = weeklyRhythmData.schedule.map((item) =>
      `**${item.day}** â€“ ${item.description}`
    );
    return {
      ...section,
      bulletpoints: scheduleBullets
    };
  }
  return section;
});
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
>
  <!-- Intro Lead Section -->
  <ContentLead
    title={title}
    content={intro.content}
    image={showTalkBuildLoopImage}
    quote={leadQuote?.quote || ""}
    author={leadQuote?.author || ""}
  />

  <!-- Content Sections -->
  {processedSections.map(
    (section: Section, index: number) => (
    <ContentSection
      title={section.title}
      content={section.content}
      image={section.image ? slideMap[section.image] : ""}
      index={index}
      id={section.id}
      bulletpoints={section.bulletpoints || []}
      pullquote={{
        quote: "",
        author: "",
        href: section.link
      }}
    />
  ))}
</Base> 