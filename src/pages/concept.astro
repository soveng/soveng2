---
import Base from "@/layouts/Base.astro";
import ContentLead from "@/layouts/components/ContentLead.astro";
import ContentSection from "@/layouts/components/ContentSection.astro";
import slideLoop from "@/assets/images/show-talk-build-loop.jpeg";
import slideWalk from "@/assets/images/walking.jpeg";
import slideEndurance from "@/assets/images/endurance.jpeg";
import slideInPerson from "@/assets/images/soveng-shirt.jpeg";
import slideCypherpunks from "@/assets/images/cypherpunks-write-code.jpeg";
import slideWideOpenSea from "@/assets/images/wide-open-sea.jpeg";
import revealedOnWalkImage from "@/assets/images/revealed-on-walk.jpg";
import smoothSeaImage from "@/assets/images/smooth-sea.jpg";
import weeklyRhythmData from "@/data/weeklyRhythm.json";
import philosophyQuotes from "@/data/philosophy-quotes.json";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";
import weeklyLoopSchedule from "@/assets/images/weekly-loop-schedule.png";
import walkToTopImage from "@/assets/images/walk-to-top.jpg";
import demoDayImage from "@/assets/images/demo-day.jpeg";
import optOutImage from "@/assets/images/opt-out.jpg";
import madeiraImage from "@/assets/images/madeira.jpg";
import twoHoursConversationImage from "@/assets/images/2-hours-of-conversation.jpeg";
import stayWeirdImage from "@/assets/images/stay-weird.jpg";
import flowersImage from "@/assets/images/flowers.jpg";
import wwwLifePathImage from "@/assets/images/www-life-path.png";

// Get concept content
const concept = (await getEntry(
  "concept",
  "-index"
)) as CollectionEntry<"concept">;

const { title, meta_title, description, intro, sections } = concept.data;

// Helper function to find quote by ID
const getQuoteById = (id: string) => {
  return philosophyQuotes.find(q => q.id === id);
};

// Get the Berdyaev quote for the ContentLead
const leadQuote = getQuoteById("berdyaev-beginning-end");

// Map image filenames to imported slide objects (now optimized assets)
const slideMap: Record<string, any> = {
  "show-talk-build-loop.jpeg": slideLoop,
  "walking.jpeg": slideWalk,
  "endurance.jpeg": slideEndurance,
  "soveng-shirt.jpeg": slideInPerson,
  "cypherpunks-write-code.jpeg": slideCypherpunks,
  "wide-open-sea.jpeg": slideWideOpenSea,
  "revealed-on-walk.jpg": revealedOnWalkImage,
  "smooth-sea.jpg": smoothSeaImage,
  "weekly-loop-schedule.png": weeklyLoopSchedule,
  "walk-to-top.jpg": walkToTopImage,
  "demo-day.jpeg": demoDayImage,
  "opt-out.jpg": optOutImage,
  "madeira.jpg": madeiraImage,
  "2-hours-of-conversation.jpeg": twoHoursConversationImage,
  "stay-weird.jpg": stayWeirdImage,
  "flowers.jpg": flowersImage,
  "www-life-path.png": wwwLifePathImage,
};

// Process sections to add special handling for weekly-loop
const processedSections = sections.map((section: any) => {
  if (section.id === "weekly-loop") {
    // Convert weekly rhythm schedule to bulletpoints
    const scheduleBullets = weeklyRhythmData.schedule.map((item) =>
      `**${item.day}** â€“ ${item.description}`
    );
    return {
      ...section,
      bulletpoints: scheduleBullets
    };
  }
  return section;
});
---

<Base
  title={title}
  meta_title={meta_title}
  description={description}
>
  <!-- Intro Lead Section -->
  <ContentLead
    title={title}
    content={intro.content}
    image={slideMap[intro.image]}
    quote={leadQuote?.quote || ""}
    author={leadQuote?.author || ""}
  />

  <!-- Content Sections -->
  {processedSections.map((section: any, index: number) => (
    <ContentSection
      title={section.title}
      content={section.content}
      image={slideMap[section.image]}
      index={index}
      id={section.id}
      bulletpoints={section.bulletpoints || []}
      pullquote={{
        quote: "",
        author: "",
        href: section.link
      }}
    />
  ))}
</Base>
