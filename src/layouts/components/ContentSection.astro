---
import { Image } from "astro:assets";
import { markdownify } from "@/lib/utils/textConverter";
import BigBlockQuote from "@/layouts/components/BigBlockQuote.astro";
import type { Button } from "@/types";
import type { ImageMetadata } from "astro";

interface Props {
  title: string;
  content: string;
  image: string | ImageMetadata;
  bulletpoints?: string[];
  button?: Button;
  index: number;
  id?: string;
  pullquote?: {
    quote: string;
    author: string;
    href?: string;
  };
  fullWidthImage?: boolean;
}

const { title, content, image, bulletpoints = [], button, id, pullquote, fullWidthImage = false } = Astro.props;

// Check if image is an imported asset or a string path
const isOptimizedImage = typeof image === 'object' && image !== null;

// Pre-process markdown content
const featureTitle = await markdownify(title);
const featureContent = await markdownify(content, true); // Add div: true for paragraph processing

// Process bullet points
const processedBulletPoints = await Promise.all(
  bulletpoints.map(async (bullet: string) => await markdownify(bullet))
);
---

<section
  class="section-sm bg-black text-white"
  id={id}
>
  <div class="container">
    {fullWidthImage || !image ? (
      <>
        {/* Full width image layout */}
        {image && (
          <div class="row justify-center">
            <div class="col-12">
              {isOptimizedImage ? (
                <Image
                  src={image as ImageMetadata}
                  height={960}
                  width={2400}
                  alt={title}
                  class="feature-image w-full mb-8"
                  format="webp"
                  quality={85}
                  loading="lazy"
                />
              ) : (
                <img
                  src={image as string}
                  height={480}
                  width={1200}
                  alt={title}
                  class="feature-image w-full mb-8"
                />
              )}
            </div>
          </div>
        )}
        <div class="row justify-center">
          <div class="md:col-10 lg:col-8">
            <h2 set:html={featureTitle} class="mb-4 text-white uppercase text-center" style="font-size: 2rem;" />

            {pullquote && pullquote.quote && pullquote.author && (
              <BigBlockQuote
                quote={pullquote.quote}
                author={pullquote.author}
                href={pullquote.href}
                left={true}
              />
            )}

            <div set:html={featureContent} class="prose-content mb-8 [&>p]:text-xl [&>p]:text-white" />
            {processedBulletPoints.length > 0 && (
              <ul>
                {processedBulletPoints.map((bullet: string) => (
                  <li class="flex items-center mb-4 text-white text-lg">
                    <span class="mr-3 flex-shrink-0 text-white">&#10022;</span>
                    <span set:html={bullet} class="text-lg [&_a]:text-lg [&_a]:text-white" />
                  </li>
                ))}
              </ul>
            )}
            {button?.enable && (
              <a
                class="btn-retro mt-5 inline-block"
                href={button.link}
                target={button.link.startsWith("http") ? "_blank" : "_self"}
                rel={button.link.startsWith("http") ? "noopener noreferrer" : ""}
              >
                {button.label}
              </a>
            )}
          </div>
        </div>
      </>
    ) : (
      <>
        {/* Side by side layout */}
        <div class="row items-start justify-between">
          <div class="md:col-7 lg:col-6">
            <h2 set:html={featureTitle} class="mb-4 text-white uppercase" style="font-size: 2rem;" />

            {pullquote && pullquote.quote && pullquote.author && (
              <BigBlockQuote
                quote={pullquote.quote}
                author={pullquote.author}
                href={pullquote.href}
                left={true}
              />
            )}

            <div set:html={featureContent} class="prose-content mb-8 [&>p]:text-xl [&>p]:text-white" />
            {processedBulletPoints.length > 0 && (
              <ul>
                {processedBulletPoints.map((bullet: string) => (
                  <li class="flex items-center mb-4 text-white text-lg">
                    <span class="mr-3 flex-shrink-0 text-white">&#10022;</span>
                    <span set:html={bullet} class="text-lg [&_a]:text-lg [&_a]:text-white" />
                  </li>
                ))}
              </ul>
            )}
            {button?.enable && (
              <a
                class="btn-retro mt-5 inline-block"
                href={button.link}
                target={button.link.startsWith("http") ? "_blank" : "_self"}
                rel={button.link.startsWith("http") ? "noopener noreferrer" : ""}
              >
                {button.label}
              </a>
            )}
          </div>
          <div class="mb:md-0 mb-6 md:col-5">
            {isOptimizedImage ? (
              <Image
                src={image as ImageMetadata}
                height={960}
                width={1040}
                alt={title}
                class="feature-image"
                format="webp"
                quality={85}
                loading="lazy"
              />
            ) : (
              <img
                src={image as string}
                height={480}
                width={520}
                alt={title}
                class="feature-image"
              />
            )}
          </div>
        </div>
      </>
    )}
  </div>
</section>

<style>
  .feature-image {
    image-rendering: auto !important;
    image-rendering: smooth !important;
    image-rendering: high-quality !important;
    image-rendering: -webkit-optimize-contrast !important;
    max-width: 100%;
    height: auto;
  }
</style>
